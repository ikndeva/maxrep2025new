echo \$cbacbadacba\# | main6stree.exe -w -L -f 18   -g -d main6stree 
@debug: update: node[6] this->posbeg=5 old_branch->ch_suf=c
@debug: update: node[8] this->posbeg=6 old_branch->ch_suf=b
@debug: update: node[10] this->posbeg=7 old_branch->ch_suf=a
@debug: update: node[13] this->posbeg=9 old_branch->ch_suf=a
@debug: update: node[6] this->posbeg=10 old_branch->ch_suf=c
@debug: update: node[8] this->posbeg=11 old_branch->ch_suf=b
@debug: update: node[10] this->posbeg=12 old_branch->ch_suf=a

#Constructing the copy of G...

#- constructing the Weiner links...

#computing nodes of W

#computing goto and suf edges of W

@exp: compute node ranks of W
T  : n=13 : '$cbacbadacba#'
SA : n=0 : []
BWT: n=0 : ''
LCP: n=0 : []
print all suffixes in the lexicographic-order...
done.
print all suffixes in the lexicographic-order...
size: n=0: 
T	size: n=0: 
done.
build: enter
build_sa: enter
build_sa: exit
build_bwt: enter
build_bwt: exit
build_lcp: enter
build_lcp: exit
build_plcp: enter
build_plcp: exit
T  : n=13 : '$cbacbadacba#'
SA : n=13 : [12 0 11 8 3 6 10 2 5 9 1 4 7]
BWT: n=13 : 'a#bdbbccca$aa'
LCP: n=13 : [0 0 0 1 4 1 0 2 2 0 3 3 0]
print all suffixes in the lexicographic-order...
rank	SA	BWT	LCP	SH	suff	size: n=13: 
0	12	a	0	1	'#'	
1	0	#	0	1	'$cbacbadacba#'	
2	11	b	0	1	'a#'	
3	8	d	1	1	'acba#'	
4	3	b	4	1	'acbadacba#'	
5	6	b	1	0	'adacba#'	
6	10	c	0	1	'ba#'	
7	2	c	2	0	'bacbadacba#'	
8	5	c	2	0	'badacba#'	
9	9	a	0	1	'cba#'	
10	1	$	3	1	'cbacbadacba#'	
11	4	a	3	1	'cbadacba#'	
12	7	a	0	0	'dacba#'	
done.
print all suffixes in the lexicographic-order...
size: n=13: 
pos	T	PLCP	TH	size: n=13: 
0	$	0	1	'$cbacbadacba#'	
1	c	3	1	'cbacbadacba#'	
2	b	2	0	'bacbadacba#'	
3	a	4	1	'acbadacba#'	
4	c	3	1	'cbadacba#'	
5	b	2	0	'badacba#'	
6	a	1	0	'adacba#'	
7	d	0	0	'dacba#'	
8	a	1	1	'acba#'	
9	c	0	1	'cba#'	
10	b	0	1	'ba#'	
11	a	0	1	'a#'	
12	#	0	1	'#'	
done.
build: exit
T  : n=13 : '$cbacbadacba#'
SA : n=13 : [12 0 11 8 3 6 10 2 5 9 1 4 7]
BWT: n=13 : 'a#bdbbccca$aa'
LCP: n=13 : [0 0 0 1 4 1 0 2 2 0 3 3 0]
print all suffixes in the lexicographic-order...
rank	SA	BWT	LCP	SH	suff	size: n=13: 
0	12	a	0	1	'#'	
1	0	#	0	1	'$cbacbadacba#'	
2	11	b	0	1	'a#'	
3	8	d	1	1	'acba#'	
4	3	b	4	1	'acbadacba#'	
5	6	b	1	0	'adacba#'	
6	10	c	0	1	'ba#'	
7	2	c	2	0	'bacbadacba#'	
8	5	c	2	0	'badacba#'	
9	9	a	0	1	'cba#'	
10	1	$	3	1	'cbacbadacba#'	
11	4	a	3	1	'cbadacba#'	
12	7	a	0	0	'dacba#'	
done.
print all suffixes in the lexicographic-order...
size: n=13: 
pos	T	PLCP	TH	size: n=13: 
0	$	0	1	'$cbacbadacba#'	
1	c	3	1	'cbacbadacba#'	
2	b	2	0	'bacbadacba#'	
3	a	4	1	'acbadacba#'	
4	c	3	1	'cbadacba#'	
5	b	2	0	'badacba#'	
6	a	1	0	'adacba#'	
7	d	0	0	'dacba#'	
8	a	1	1	'acba#'	
9	c	0	1	'cba#'	
10	b	0	1	'ba#'	
11	a	0	1	'a#'	
12	#	0	1	'#'	
done.
dot -Tpdf main6stree.dot > main6stree.pdf
rm main6stree.dot
